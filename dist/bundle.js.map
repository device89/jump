{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/config.js","webpack:///./src/display.js","webpack:///./src/flare.js","webpack:///./src/index.js","webpack:///./src/input_manager.js","webpack:///./src/levels.js","webpack:///./src/model.js","webpack:///./src/platform.js","webpack:///./src/player.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,E;;;;;;;;;;;;AClBA;AAAA;AAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,gDAAQ,QAAQ,gDAAQ;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,E;;;;;;;;;;;;ACnItB;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,4CAAI;AAC/B,SAAS;AACT,2BAA2B,4CAAI;AAC/B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACjCpB;AAAA;AAAA;AAA2C;AACf;;AAE5B,kBAAkB,sDAAY;AAC9B,gBAAgB,8CAAK;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,W;;;;;;;;;;;;ACpCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,E;;;;;;;;;;;;ACnD3B;AAAA;AAAA;AAAA;AAAoC;AACF;;AAE3B;AACP,QAAQ,iDAAQ;AAChB,QAAQ,iDAAQ;AAChB,QAAQ,iDAAQ;AAChB,QAAQ,iDAAQ;AAChB,QAAQ,iDAAQ;AAChB,QAAQ,iDAAQ,UAAU,gDAAQ;AAClC,E;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACJ;AACM;AACJ;AACI;AACE;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAAK;AAC5B;AACA;AACA,oBAAoB,gDAAO;;AAE3B;AACA;AACA;AACA,wBAAwB,+CAAM;AAC9B,uBAAuB,8CAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,gDAAQ;AAC3C;AACA,4CAA4C,iDAAQ;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8CAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC,8CAAM;AACxC,oCAAoC,8CAAK;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mDAAmD,gDAAQ;AAC3D;AACA;AACA;AACA;AACA,wFAAwF,gDAAQ;AAChG,oGAAoG,gDAAQ;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;AC9FpB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,E;;;;;;;;;;;;AClBvB;AAAA;AAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,gDAAQ;AAClC,qBAAqB,gDAAQ;AAC7B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,wCAAwC,+CAAO;;AAE/C;AACA;AACA,+BAA+B,+CAAO;AACtC;AACA;AACA;AACA,+BAA+B,+CAAO;AACtC;AACA;AACA;AACA;AACA,qCAAqC,+CAAO;AAC5C,oCAAoC,+CAAO;AAC3C,sBAAsB,+CAAO,wBAAwB,+CAAO;AAC5D,uBAAuB,+CAAO,yBAAyB,+CAAO;;AAE9D,mBAAmB,+CAAO;AAC1B;AACA;AACA;AACA,mEAAmE,WAAW;AAC9E;AACA;;AAEe,qEAAM,E","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export const game = {\n    flareStartRadius: 100,\n    flareGrowSpeed: 20,\n}\n\nexport const physics = {\n    gravity: 2400,\n    jumpVel: 1200,\n    playerSpeed: 500,\n    playerAccel: 10000,\n    friction: 6000,\n    flareSpeed: 500,\n    platformSpeeds: 15,\n};\n\nexport const graphics = {\n    width: 1000,\n    height: 600,\n};","import { graphics } from './config';\nconst canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext('2d');\n\nclass Display {\n    constructor() {\n        this.lastEyeShift = Date.now();\n        this.eyePos = 1;\n    }\n\n    draw(dx, dy, entities) {\n        ctx.fillStyle = 'black';\n        ctx.fillRect(0,0, graphics.width, graphics.height);\n        entities.flares.forEach(flare => this.drawFlare(dx, dy, flare));\n        entities.platforms.forEach(platform => this.drawPlatform(dx, dy, platform));\n        this.drawPlayer(dx, dy, entities.player);\n    }\n\n    drawFlare(dx, dy, flare) {\n        const cx = flare.x - dx;\n        const cy = flare.y - dy;\n        const gradient = ctx.createRadialGradient(cx, cy, 5, cx, cy, flare.radius);\n        gradient.addColorStop(0, flare.color1);\n        gradient.addColorStop(0.4, flare.color2);\n        gradient.addColorStop(1, 'rgba(0,0,0,0)');\n        ctx.fillStyle = gradient;\n        ctx.fillRect(cx-flare.radius, cy-flare.radius, flare.radius*2, flare.radius*2);\n    }\n\n    drawPlatform(dx, dy, platform) {\n        const cx = platform.x - dx;\n        const cy = platform.y - dy;\n        // ctx.fillStyle = '#040404';\n        ctx.fillStyle = 'rgba(0,0,0,1)';\n        if (platform.touched) {\n            ctx.shadowBlur = 30;\n            ctx.shadowColor = \"white\";\n        } else if (platform.bumped) {\n            ctx.shadowBlur = (Date.now() - platform.bumpedAt)*0.5;\n            ctx.shadowColor = \"white\";\n            platform.turnOffBumped();\n        }\n\n        ctx.fillRect(cx, cy, platform.width, platform.height);\n        ctx.shadowBlur = 0;\n        ctx.strokeStyle = 'white';\n        // ctx.strokeRect(cx, cy, platform.width, platform.height);\n    }\n\n    drawPlayer(dx, dy, player) {\n        const cx = player.x - dx;\n        const cy = player.y - dy;\n        const vx = player.vx;\n        const vy = player.vy;\n\n        // Draw body\n        ctx.fillStyle = 'black';\n        ctx.fillRect(cx, cy+14, 50, 36);\n        ctx.beginPath();\n        ctx.arc(cx+25, cy+18, 25, 0, Math.PI, true);\n        ctx.fill();\n        \n        // Draw eyes\n        ctx.fillStyle = 'white';\n        ctx.fillRect(8 + cx, cy, 12, 12);\n        ctx.fillRect(28 + cx, cy, 12, 12);\n\n        // Draw pupils\n        const now = Date.now();\n        ctx.fillStyle = 'black';   \n        if (vx === 0 && vy === 0) {\n            if (now - this.lastEyeShift > 600) {\n                this.eyePos = Math.floor(Math.random()*3);\n                this.lastEyeShift = now;\n            }\n            switch (this.eyePos) {\n                case 0:\n                    ctx.fillRect(8 + cx+7, cy+3, 6, 6);\n                    ctx.fillRect(8 + cx+27, cy+3, 6, 6);\n                    break;\n                case 1: \n                    ctx.fillRect(8 + cx, cy+3, 6, 6);\n                    ctx.fillRect(8 + cx+20, cy+3, 6, 6);\n                    break;\n                case 2:\n                    ctx.fillRect(8 + cx+3, cy, 6, 6);\n                    ctx.fillRect(8 + cx+23, cy, 6, 6);\n                    break;\n                default:\n                    ctx.fillRect(8 + cx+3, cy+3, 6, 6);\n                    ctx.fillRect(8 + cx+23, cy+3, 6, 6);\n                    break;\n            }\n        } else {\n            this.lastEyeShift = now;\n        }\n        if (vx > 0 && vy < 53) {\n            ctx.fillRect(8 + cx+7, cy+3, 6, 6);\n            ctx.fillRect(8 + cx+27, cy+3, 6, 6);\n        }\n        if (vx > 0 && vy < 0) { \n            ctx.fillRect(8 + cx+6, cy, 6, 6);\n            ctx.fillRect(8 + cx+26, cy, 6, 6);\n        }\n        if (vx > 0 && vy > 53) {\n            ctx.fillRect(8 + cx+6, cy+6, 6, 6);\n            ctx.fillRect(8 + cx+26, cy+6, 6, 6);\n        }\n        if (vx === 0 && vy > 52) {\n            ctx.fillRect(8 + cx+3, cy+6, 6, 6);\n            ctx.fillRect(8 + cx+23, cy+6, 6, 6);\n        }\n        if (vx === 0 && vy < 0) {\n            ctx.fillRect(8 + cx+3, cy, 6, 6);\n            ctx.fillRect(8 + cx+23, cy, 6, 6);\n        }\n        if (vx < 0 && vy < 52) {\n            ctx.fillRect(8 + cx, cy+3, 6, 6);\n            ctx.fillRect(8 + cx+20, cy+3, 6, 6);\n        }\n        if (vx < 0 && vy < 0) {\n            ctx.fillRect(8 + cx, cy, 6, 6);\n            ctx.fillRect(8 + cx+20, cy, 6, 6);\n        }\n        if (vx < 0 && vy > 53) {\n            ctx.fillRect(8 + cx, cy+6, 6, 6);\n            ctx.fillRect(8 + cx+20, cy+6, 6, 6);\n        }\n    }\n}\n\nexport default Display;","import {game, physics} from './config';\n\nclass Flare {\n    constructor(x, y, radius, maxRadius, color1, color2) {\n        this.x = x;\n        this.y = y;\n        this.color1 = color1;\n        this.color2 = color2;\n        this.radius = radius;\n        this.minRadius = radius;\n        this.maxRadius = maxRadius;\n        this.growing = true;\n        this.vx = 0;\n        this.vy = 0;\n        this.speed = Math.random()*200+50;\n    }\n\n    update(dt) {\n        if (this.growing) {\n            this.radius += game.flareGrowSpeed * dt;\n        } else {\n            this.radius -= game.flareGrowSpeed * dt;\n        }\n        if (this.radius > this.maxRadius) {\n            this.growing = false;\n        } else if (this.radius < this.minRadius) {\n            this.growing = true;\n        }\n        // this.vy += physics.gravity/10 * dt;\n        this.y += this.speed * dt;\n    }\n}\n\nexport default Flare;","import InputManager from './input_manager';\nimport Model from './model';\n\nconst input = new InputManager();\nlet model = new Model();\ninput.bindKeys();\nlet lastTime = Date.now();\nlet status = 'welcome';\n\nconst mainLoop = () => {\n    if (status === 'welcome') {\n        if (input.pressedKeys.enter) {\n            status = 'playing';\n            const instructions = document.querySelector('.instructions');\n            instructions.classList.add('hidden');\n            model.start();\n        }\n    }\n\n    if (model.gameOver) {\n        const gameOverMessage = document.querySelector('.game-over');\n        gameOverMessage.classList.remove('hidden');\n        if (input.pressedKeys.enter) {\n            model.resetGame();\n            status === 'welcome';\n            gameOverMessage.classList.add('hidden');\n        }\n    }\n\n    let now = Date.now();\n    let dt = (now - lastTime) / 1000;\n    lastTime = now;\n    model.update(input.pressedKeys, dt);\n\n    requestAnimationFrame(() => mainLoop());\n}\nmainLoop();","const KEY = {\n    UP: 12,\n    LEFT:  37,\n    RIGHT: 39,\n    ENTER: 13,\n    JUMP: 38\n};\n\nclass InputManager {\n    constructor() {\n        this.pressedKeys = { left: false, right: false, up: false, jump: false, enter: false };\n    }\n\n    bindKeys() {\n        window.addEventListener('keyup', this.handleKeys.bind(this, false));\n        window.addEventListener('keydown', this.handleKeys.bind(this, true));\n    }\n      \n    unbindKeys() {\n        window.removeEventListener('keyup', this.handleKeys);\n        window.removeEventListener('keydown', this.handleKeys);\n    }\n      \n    handleKeys(value, e){\n        switch (e.keyCode) {\n            case KEY.UP:\n                e.preventDefault();\n                this.pressedKeys.up = value;\n                break;\n            case KEY.LEFT:\n                e.preventDefault();\n                this.pressedKeys.left = value;\n                break;\n            case KEY.RIGHT:\n                e.preventDefault();\n                this.pressedKeys.right = value;\n                break;\n            case KEY.JUMP:\n                e.preventDefault();\n                this.pressedKeys.jump = value;\n                break;\n            case KEY.ENTER:\n                e.preventDefault();\n                this.pressedKeys.enter = value;\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport default InputManager;","import { graphics } from './config';\nimport Platform from './platform';\n\nexport const level1 = [\n    new Platform(400, 4000, 400, 28),\n    new Platform(100, 4200, 400, 28),\n    new Platform(520, 4400, 310, 28),\n    new Platform(800, 4580, 200, 28),\n    new Platform(400, 4700, 300, 28),\n    new Platform(0, 4900, graphics.width, 200)\n];","import Display from './display';\nimport Flare from './flare';\nimport Platform from './platform';\nimport Player from './player';\nimport { level1 } from './levels';\nimport { graphics } from './config';\n\nconst colors = [\n    '#a450fd',\n    '#fd5053',\n    '#a9fd50',\n    '#50fdfa'\n];\nconst introFlare = new Flare(600, 4250, 300, 500, '#a450fd', '#50fdfa');\nconst viewSpeeds = [0, 40, 80, 140, 220, 260];\nconst flareSpeeds = [400, 200, 180, 170, 160, 150]\nconst display = new Display();\n\nclass Model {\n    constructor() {\n        this.entities = {\n            player: new Player(400, 4855),\n            platforms: level1,\n            flares: [introFlare]\n        }\n        this.dy = 4500;\n        this.lastFlare = Date.now();\n        this.level = 0;\n        this.gameOver = false;\n    }\n\n    generatePlatform() {\n        const lastY = this.entities.platforms[0].y;\n        const x = Math.random() * (graphics.width - 320);\n        const y = lastY - 200;\n        this.entities.platforms.unshift(new Platform(x, y, 250, 28));\n    }\n\n    generateFlares() {\n        const now = Date.now();\n        if (now - this.lastFlare > flareSpeeds[this.level]) {\n            const color1 = Math.floor(Math.random()*3);\n            const color2 = Math.floor(Math.random()*3);\n            const flare = new Flare(Math.random()*1100 + 50,\n                                    this.dy - 500,\n                                    Math.random()*100 + 1,\n                                    Math.random()*2000 + 10,\n                                    colors[color1],\n                                    colors[color2]\n                                );\n            this.entities.flares.push(flare);\n            this.lastFlare = now;\n        }\n    }\n\n    resetGame() {\n        this.entities.player.x = 400;\n        this.entities.player.y = 4855;\n        this.entities.player.vy = 0;\n\n        this.entities.platforms = level1;\n        this.entities.flares = [new Flare(600, 4250, 300, 500, '#a450fd', '#50fdfa')];\n        this.entities.platforms.forEach(platform => platform.touched = false);\n        this.level = 1;\n        this.gameOver = false;\n        this.entities.player.score = -1;\n        this.dy = 4500;\n    }\n\n    start() {\n        this.level = 1;\n    }\n\n    update(inputs, dt) {\n        if (this.entities.player.score > 5) this.level = 2;\n        if (this.entities.player.score > 15) this.level = 3;\n        if (this.entities.player.score > 30) this.level = 4;\n        \n        if (this.entities.player.y > this.dy + 1.5*graphics.height) {\n            this.gameOver = true;\n        }\n        this.dy -= viewSpeeds[this.level] * dt;\n        // if (this.entities.player.y < this.dy) this.dy = this.entities.player.y;\n        this.entities.flares = this.entities.flares.filter(flare => flare.y < this.dy + graphics.height + flare.maxRadius);\n        this.entities.platforms = this.entities.platforms.filter(platform => platform.y < this.dy + graphics.height + 200);\n        this.generateFlares();\n        if (this.entities.player.score > this.entities.platforms.length - 3) this.generatePlatform();\n        this.entities.flares.forEach(flare => flare.update(dt));\n        this.entities.player.update(inputs, dt);\n        this.entities.player.handleCollisions(this.entities.platforms);\n        display.draw(0, this.dy, this.entities);\n    }\n}\n\nexport default Model;","class Platform {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.touched = false;\n        this.bumped = false;\n        this.bumpedAt = null;\n    }\n\n    turnOffBumped() {\n        if (this.bumped && Date.now() - this.bumpedAt > 600) {\n            this.bumped = false;\n        }\n    }\n}\n\nexport default Platform;","import { physics, graphics } from \"./config\";\n\nclass Player {\n    constructor(x, y, ctx) {\n        this.x = x;\n        this.y = y;\n        this.vx = 0;\n        this.vy = 0;\n        this.ctx = ctx;\n        this.onPlat = true;\n        this.lastEyeShift = Date.now();\n        this.score = -1;\n    }\n\n    handleCollisions(platforms) {\n        if (this.x + 50 > graphics.width) {\n            this.x = graphics.width - 50;\n            this.vx = 0;\n        } else if (this.x < 0) {\n            this.x = 0;\n            this.vx = 0;\n        }\n        platforms.forEach(platform => {\n            const sx = platform.x; //start x\n            const ex = sx + platform.width;\n            const sy = platform.y;\n            const ey = sy + platform.height;\n\n            if (this.x + 50 > sx && this.x < ex) {\n                // Handle floors\n                if (this.y + 50 > sy && this.y + 50 < ey ) {\n                    this.vy = 0;\n                    this.y = sy - 50;\n                    this.onPlat = true;\n                    if (!platform.touched) {\n                        platform.touched = true;\n                        this.score += 1;\n                    }\n                }\n                // Handle ceilings\n                if (this.y < ey && this.y > sy) {\n                    this.vy = 0;\n                    this.y = ey;\n                    platform.bumped = true;\n                    platform.bumpedAt = Date.now();\n                }\n            }\n        });\n    }\n\n    update(inputs, dt) {\n        if (this.onPlat) {\n            if (inputs.jump) this.vy = -physics.jumpVel;\n\n            if (!inputs.right && !inputs.left) {\n                if (this.vx > 0) {\n                    this.vx -= physics.friction * dt;\n                    if (this.vx < 0) this.vx = 0;\n                }\n                if (this.vx < 0) {\n                    this.vx += physics.friction * dt;\n                    if (this.vx > 0) this.vx = 0\n                }\n            }\n        }\n        if (inputs.right) this.vx += physics.playerAccel * dt;\n        if (inputs.left) this.vx -= physics.playerAccel * dt;\n        if (this.vx > physics.playerSpeed) this.vx = physics.playerSpeed;\n        if (this.vx < -physics.playerSpeed) this.vx = -physics.playerSpeed;\n\n        this.vy += physics.gravity * dt;\n        this.x += this.vx * dt;\n        this.y += this.vy * dt;\n        this.onPlat = false;\n        document.getElementById('score').innerHTML = `Platforms: ${this.score}`;\n    }\n}\n\nexport default Player;"],"sourceRoot":""}